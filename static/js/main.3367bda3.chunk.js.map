{"version":3,"sources":["redux/modules/mapCenter/index.js","redux/modules/points/index.js","utils/reorder.js","components/MyMap/index.js","components/PointInput/index.js","components/Point/index.js","components/PointsList/index.js","components/App/index.js","registerServiceWorker.js","redux/index.js","index.js"],"names":["setMapCenter","createAction","mapCenterReducer","handleActions","Object","defineProperty","state","_ref","payload","addPoint","deletePoint","dragPoint","setPointCoords","pointsReducer","_handleActions","toConsumableArray","concat","_ref2","newState","splice","_ref3","_ref3$payload","endIndex","list","startIndex","result","_result$splice","removed","slicedToArray","reorder","_ref4","_ref4$payload","coords","key","map","point","objectSpread","enhance","compose","connect","points","setCoordsAction","setMapCenterAction","withState","center","zoom","mapRef","mapState","setMapRef","react_default","a","createElement","react_yandex_maps_es","instanceRef","elem","height","onBoundsChange","getCenter","width","index","geometry","coordinates","type","onDrag","e","options","get","fromGlobalPixels","converter","pageToGlobal","getZoom","draggable","properties","balloonContent","value","iconContent","mapCenter","addPointAction","setValue","TextField_default","fullWidth","label","onChange","target","onKeyDown","keyCode","Date","now","withStyles","theme","chip","margin","backgroundColor","display","justifyContent","classes","deleteAction","draggableId","react_beautiful_dnd_esm","provided","assign","ref","innerRef","draggableProps","dragHandleProps","Chip_default","className","clickable","color","onDelete","variant","dragAction","onDragEnd","destination","source","droppableId","item","components_Point","placeholder","GlobalStyle","createGlobalStyle","_templateObject","Wrapper","styled","div","_templateObject2","List","_templateObject3","App","components_PointInput","components_PointsList","components_MyMap","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","rootReducer","combineReducers","composeEnhancers","store","createStore","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3367bda3.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n\n// Actions\nexport const setMapCenter = createAction('SET_MAP_CENTER');\n\n// Reducers\nconst initialState = [55.76, 37.64];\n\nexport const mapCenterReducer = handleActions({\n  [setMapCenter]: (state, { payload }) => payload,\n}, initialState);\n","import { createAction, handleActions } from 'redux-actions';\n\nimport { reorder } from '../../../utils/reorder';\n\n// Actions\nexport const addPoint = createAction('ADD_POINT');\nexport const deletePoint = createAction('DELETE_POINT');\nexport const dragPoint = createAction('DRAG_POINT');\nexport const setPointCoords = createAction('SET_POINT_COORDS');\n\n// Reducers\nconst initialState = [];\n\nexport const pointsReducer = handleActions({\n  [addPoint]: (state, { payload }) => [...state, payload],\n  [deletePoint]: (state, { payload }) => {\n    const newState = [...state];\n\n    newState.splice(payload, 1);\n    return newState;\n  },\n  [dragPoint]: (state, { payload: {endIndex, startIndex} }) => reorder(\n    state,\n    startIndex,\n    endIndex,\n  ),\n  [setPointCoords]: (state, { payload: { coords, key } }) => state.map(point => (\n    key === point.key \n      ? { ...point, coords: coords }\n      : point\n  )),\n}, initialState);\n","export const reorder = (list, startIndex, endIndex) => {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  \n  result.splice(endIndex, 0, removed);\n  return result;\n};\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Map, Placemark, Polyline, YMaps } from 'react-yandex-maps';\r\nimport { compose, withState } from 'recompose';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setMapCenter } from '../../redux/modules/mapCenter';\r\nimport { setPointCoords } from '../../redux/modules/points';\r\n\r\nconst MyMap = ({\r\n  mapRef,\r\n  mapState,\r\n  points,\r\n  setCoordsAction,\r\n  setMapCenterAction,\r\n  setMapRef,\r\n}) => (\r\n  <YMaps>\r\n    <Map\r\n      instanceRef={(elem) => setMapRef(elem)}\r\n      height='100%'\r\n\r\n      // Setting the map center's coords after moving the map\r\n      onBoundsChange={() => setMapCenterAction(mapRef.getCenter())}\r\n      state={mapState}\r\n      width='50%'\r\n    >\r\n      {points.map((point, index) => (\r\n        <Placemark\r\n          geometry={{\r\n            coordinates: point.coords,\r\n            type: 'Point',\r\n          }}\r\n          key={point.key}\r\n          onDrag={e => {\r\n            // Converting page pixel coords to global map coords\r\n            const coords = mapRef.options.get('projection').fromGlobalPixels(\r\n              mapRef.converter.pageToGlobal(e.get('position')),\r\n              mapRef.getZoom(),\r\n            );\r\n            setCoordsAction({ coords, key: point.key });\r\n          }}\r\n          options={{ draggable: true }}\r\n          properties={{ \r\n            balloonContent: point.value,\r\n            iconContent: index + 1, \r\n          }}\r\n        />\r\n      ))}\r\n      <Polyline\r\n        geometry={{\r\n          coordinates: points.map(point => point.coords), \r\n        }}\r\n      />\r\n    </Map>\r\n  </YMaps>\r\n);\r\n\r\nconst enhance = compose(\r\n  connect(\r\n    state => ({ points: state.points }),\r\n    { setCoordsAction: setPointCoords, setMapCenterAction: setMapCenter }),\r\n  withState('mapRef', 'setMapRef', null),\r\n  withState('mapState', 'setMapState', { center: [55.76, 37.64], zoom: 10 }),\r\n);\r\n\r\nexport default enhance(MyMap);\r\n\r\nMyMap.propTypes = {\r\n  mapState: PropTypes.object.isRequired,\r\n  points: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      coords: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n      key: PropTypes.number.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  setCoordsAction: PropTypes.func.isRequired,\r\n  setMapCenterAction: PropTypes.func.isRequired,\r\n  setMapRef: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose, withState } from 'recompose';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { addPoint } from '../../redux/modules/points';\r\n\r\nconst PointInput = ({\r\n  addPointAction,\r\n  mapCenter,\r\n  setValue,\r\n  value,\r\n}) => (\r\n  <TextField\r\n    fullWidth\r\n    label='Enter a point name'\r\n    onChange={(e) => setValue(e.target.value)}\r\n    onKeyDown={(e) => {\r\n      if (e.keyCode === 13 && e.target.value !== '') {\r\n        addPointAction({\r\n          coords: mapCenter,\r\n          key: Date.now(),\r\n          value: e.target.value,\r\n        });\r\n        setValue('');\r\n      }\r\n    }}\r\n    value={value}\r\n  />\r\n);\r\n\r\nconst enhance = compose(\r\n  connect(({ mapCenter }) => ({ mapCenter }), { addPointAction: addPoint }),\r\n  withState('value', 'setValue', ''),\r\n);\r\n\r\nexport default enhance(PointInput);\r\n\r\nPointInput.propTypes = {\r\n  addPointAction: PropTypes.func.isRequired,\r\n  mapCenter: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  setValue: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n}\r\n","import Chip from '@material-ui/core/Chip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Point = ({\r\n  classes,\r\n  deleteAction,\r\n  draggableId,\r\n  index,\r\n  value,\r\n}) => (\r\n  <Draggable\r\n    draggableId={draggableId}\r\n    index={index}\r\n  >\r\n    {provided => (\r\n      <div\r\n        ref={provided.innerRef}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n      >\r\n        <Chip\r\n          className={classes.chip}\r\n          clickable\r\n          color='primary'\r\n          onDelete={() => deleteAction(index)}\r\n          label={value}\r\n          variant='outlined'\r\n        />\r\n      </div>\r\n    )}\r\n  </Draggable>\r\n);\r\n\r\nconst styles = theme => ({\r\n  chip: {\r\n    width: 'calc(100% - 4px)',\r\n    margin: '2px',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(Point);\r\n\r\nPoint.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  deleteAction: PropTypes.func.isRequired,\r\n  draggableId: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deletePoint, dragPoint } from '../../redux/modules/points';\r\nimport Point from '../Point';\r\n\r\nconst PointsList = ({\r\n  deleteAction,\r\n  dragAction,\r\n  points,\r\n}) => (\r\n  <DragDropContext\r\n\r\n    // FIX: doesn't update state when dragging\r\n    onDragEnd={result => {\r\n      if (!result.destination) return;\r\n      dragAction({\r\n        startIndex: result.source.index,\r\n        endIndex: result.destination.index,\r\n      });\r\n    }}\r\n  >\r\n    <Droppable droppableId='droppable'>\r\n      {provided => (\r\n        <div\r\n          ref={provided.innerRef}\r\n        >\r\n          {points.map((item, index) => (\r\n            <Point\r\n              deleteAction={deleteAction}\r\n              draggableId={item.key}\r\n              index={index}\r\n              key={item.key}\r\n              value={item.value}\r\n            />\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  </DragDropContext>\r\n);\r\n\r\nconst enhance = connect(\r\n  state => ({ points: state.points }),\r\n  { deleteAction: deletePoint, dragAction: dragPoint },\r\n);\r\n\r\nexport default enhance(PointsList);\r\n\r\nPointsList.propTypes = {\r\n  deleteAction: PropTypes.func.isRequired,\r\n  dragAction: PropTypes.func.isRequired,\r\n  points: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      coords: PropTypes.array,\r\n      key: PropTypes.number,\r\n      value: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n}\r\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\n\nimport MyMap from '../MyMap';\nimport PointInput from '../PointInput';\nimport PointsList from '../PointsList';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  min-width: 640px;\n  display: flex;\n`;\n\nconst List = styled.div`\n  height: 100%;\n  width: 50%;\n  margin: 0 10px;\n  overflow: auto;\n`;\n\nconst App = () => (\n  <Wrapper>\n    <GlobalStyle />\n    <List>\n      <PointInput />\n      <PointsList />\n    </List>\n    <MyMap />\n  </Wrapper>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  combineReducers,\n  compose,\n  createStore,\n} from 'redux';\n\nimport { mapCenterReducer } from './modules/mapCenter';\nimport { pointsReducer } from './modules/points';\n\nexport const rootReducer = combineReducers({\n  mapCenter: mapCenterReducer,\n  points: pointsReducer,\n});\n\nconst composeEnhancers = (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : compose;\n\nexport const store = createStore(rootReducer, composeEnhancers());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { store } from './redux';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}